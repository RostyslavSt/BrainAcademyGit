What will result from performance of this code and why?

var car = { 

 color: 'red',

 getColor: function() {alert(this.color);}

};

car.getColor();

var getColor = car.getColor;

getColor();

???????? ???? ?????:
a. red, red
b. red, undefined
c. undefined, undefined



What will be alerted

<body>
  <script>
    alert( document.nodeName );
    alert( document.tagName );
  </script>
</body>
???????? ???? ?????:
a. 1. undefined
2. undefined
b. 1. undefined
2. #document
c. 1. #document
2. #document
d. 1. #document
2. undefined




What will be alerted in both cases:

<div id="container"> 
       <p class="text">some text</p>
</div>

<script>

       var container = document.getElementById('container');
       var text = document.getElementsByClassName('text')[0];

       container.innerHTML = '';

       alert(text.innerText);

       text = document.getElementsByClassName('text')[0];

       alert(text.innerText);

</script>

???????? ???? ?????:
a. 1. some text
2. some text
b. 1. error will occur
2. some text
c. 1. empty string
2. error will occur
d. 1. undefined
2. undefined
e. 1. error will occur
2. error will occur
f. 1. some text
2. error will occur



What is the value result?

var o = {

        x: 8,

        valueOf: function(){ return this.x + 2;},

        toString: function(){ return this.x.toString();}

    },

    result = o < "9";

alert(result);

???????? ???? ?????:
a. true
b. false



That will return this code?

(function(x){

    delete x;

    return x;

  })(1);

???????? ???? ?????:
a. 1
b. undefined



That will return this code?

(function f(f){

    return typeof f();

  })(function(){ return 1; });

???????? ???? ?????:
a. “function”
b. Error
c. “undefined”
d. “number”



var o = {

        x: 8,

        valueOf: function(){ return this.x + 2;},

        toString: function(){ return this.x.toString();}

    },

    result = o < "9";

alert(o);



What is the value of  +num1 + num2?

var num1 = "10",

    num2 = "9";

???????? ???? ?????:
a. 109
b. 10
c. 19



c. null